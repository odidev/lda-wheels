version: ~> 1.0
env:
  global:
    - REPO_DIR=lda
    - BUILD_COMMIT=2.0.0
    - BUILD_DEPENDS=
    - TEST_DEPENDS=
    - UNICODE_WIDTH=32
    - NP_BUILD_DEP=1.13.3

language: python
cache:
  - pip
python: 3.7
os: linux
dist: xenial
services: docker

jobs:
  - os: linux
    env:
      - MB_PYTHON_VERSION=3.6
  - os: linux
    env:
      - MB_PYTHON_VERSION=3.7
      - NP_BUILD_DEP=1.14.5
  - os: linux
    env:
      - MB_PYTHON_VERSION=3.8
      - NP_BUILD_DEP=1.14.5
  - os: linux
    env:
      - MB_PYTHON_VERSION=3.9
      - NP_BUILD_DEP=1.19.5
  - os: linux
    arch: arm64
    env:
      - MB_PYTHON_VERSION=3.6
      - PLAT=aarch64
      - DOCKER_IMAGE=quay.io/pypa/manylinux2014_${PLAT}
      - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
  - os: linux
    arch: arm64
    env:
      - MB_PYTHON_VERSION=3.7
      - NP_BUILD_DEP=1.14.5
      - PLAT=aarch64
      - DOCKER_IMAGE=quay.io/pypa/manylinux2014_${PLAT}
      - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
  - os: linux
    arch: arm64
    env:
      - MB_PYTHON_VERSION=3.8
      - NP_BUILD_DEP=1.14.5
      - PLAT=aarch64
      - DOCKER_IMAGE=quay.io/pypa/manylinux2014_${PLAT}
      - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
  - os: linux
    arch: arm64
    env:
      - MB_PYTHON_VERSION=3.9
      - NP_BUILD_DEP=1.19.5
      - PLAT=aarch64
      - DOCKER_IMAGE=quay.io/pypa/manylinux2014_${PLAT}
      - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
  - os: osx
    language: objective-c
    env:
      - MB_PYTHON_VERSION=3.6
  - os: osx
    language: objective-c
    env:
      - MB_PYTHON_VERSION=3.7
      - NP_BUILD_DEP=1.14.5
  - os: osx
    language: objective-c
    env:
      - MB_PYTHON_VERSION=3.8
      - NP_BUILD_DEP=1.14.5
  - os: osx
    language: objective-c
    env:
      - MB_PYTHON_VERSION=3.9
      - NP_BUILD_DEP=1.19.5

before_install:
    - BUILD_DEPENDS="numpy==$NP_BUILD_DEP ${BUILD_DEPENDS}"
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    # FIXME: have setup.py arrange for Cython code to be generated
    - pip install Cython
    - make -C lda
    - build_wheel $REPO_DIR

script:
    - install_run

after_success:
  # PYPI_TOKEN is a secure variable set via the travis-ci.com website
  - |
    if [[ $TRAVIS_PULL_REQUEST == "false" ]]; then
      python3 -m pip install twine
      python3 -m twine upload --skip-existing -u __token__ -p "$PYPI_TOKEN" ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl
    else
      echo "This build is connected to a pull request. Not uploading to PyPI."
    fi
